From 74704affac464858eb42ba32e6ad45df3e4dfe70 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Thu, 14 May 2020 19:54:55 +0200
Subject: [PATCH 22/24] Add persist.sys.phh.samsung.camera_ids property to
 access hidden Samsung cameras

---
 services/camera/libcameraservice/Android.bp         |  1 +
 .../common/CameraProviderManager.cpp                | 13 +++++++++++--
 2 files changed, 12 insertions(+), 2 deletions(-)

diff --git a/services/camera/libcameraservice/Android.bp b/services/camera/libcameraservice/Android.bp
index 1c1f5e6e45..6672163fca 100644
--- a/services/camera/libcameraservice/Android.bp
+++ b/services/camera/libcameraservice/Android.bp
@@ -107,6 +107,7 @@ cc_library_shared {
         "android.hardware.camera.device@3.3",
         "android.hardware.camera.device@3.4",
         "android.hardware.camera.device@3.5",
+        "vendor.samsung.hardware.camera.provider@3.0",
     ],
 
     export_shared_lib_headers: [
diff --git a/services/camera/libcameraservice/common/CameraProviderManager.cpp b/services/camera/libcameraservice/common/CameraProviderManager.cpp
index fdb5657500..9c1c70c846 100644
--- a/services/camera/libcameraservice/common/CameraProviderManager.cpp
+++ b/services/camera/libcameraservice/common/CameraProviderManager.cpp
@@ -21,6 +21,7 @@
 #include "CameraProviderManager.h"
 
 #include <android/hardware/camera/device/3.5/ICameraDevice.h>
+#include <vendor/samsung/hardware/camera/provider/3.0/ISehCameraProvider.h>
 
 #include <algorithm>
 #include <chrono>
@@ -1225,6 +1226,9 @@ status_t CameraProviderManager::ProviderInfo::initialize(
         mMinorVersion = 4;
     }
 
+    auto samsungCast = vendor::samsung::hardware::camera::provider::V3_0::ISehCameraProvider::castFrom(interface);
+    auto samsungProvider = samsungCast.isOk() ? static_cast<sp<vendor::samsung::hardware::camera::provider::V3_0::ISehCameraProvider>>(samsungCast) : nullptr;
+
     // cameraDeviceStatusChange callbacks may be called (and causing new devices added)
     // before setCallback returns
     hardware::Return<Status> status = interface->setCallback(this);
@@ -1269,7 +1273,7 @@ status_t CameraProviderManager::ProviderInfo::initialize(
 
     // Get initial list of camera devices, if any
     std::vector<std::string> devices;
-    hardware::Return<void> ret = interface->getCameraIdList([&status, this, &devices](
+    auto cb = [&status, this, &devices](
             Status idStatus,
             const hardware::hidl_vec<hardware::hidl_string>& cameraDeviceNames) {
         status = idStatus;
@@ -1286,7 +1290,12 @@ status_t CameraProviderManager::ProviderInfo::initialize(
                     mProviderPublicCameraIds.push_back(id);
                 }
             }
-        } });
+        } };
+    hardware::Return<void> ret;
+    if(samsungProvider != nullptr && property_get_bool("persist.sys.phh.samsung.camera_ids", false))
+        ret = samsungProvider->sehGetCameraIdList(cb);
+    else
+        ret = interface->getCameraIdList(cb);
     if (!ret.isOk()) {
         ALOGE("%s: Transaction error in getting camera ID list from provider '%s': %s",
                 __FUNCTION__, mProviderName.c_str(), linked.description().c_str());
-- 
2.17.1

